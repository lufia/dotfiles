#!/bin/sh
# go-upgrade: upgrade local commands already installed

# This script scrapes output of go version -m.
# Its output format is:
#
# /home/lufia/bin/pingu: go1.18.3
#	path	github.com/sheepla/pingu
#	mod	github.com/sheepla/pingu	v0.0.2	h1:4t3Z8cGYs+GonrC0UEhXPlcS+e8goP8A1Sha6eeHZAc=

function usage()
{
	echo "usage: $(basename "$0") [-u] [file ...]" >&2
	exit 2
}

flagu=0
while getopts :u OPT
do
	case "$OPT" in
	u)	flagu=1 ;;
	*)	usage ;;
	esac
done
shift $((OPTIND - 1))

function needupdate()
{
	local lver="$(go version "$1" 2>/dev/null | sed 's/.*: //')"
	if [[ -z $lver ]]
	then
		return 0
	fi
	local p="$(go version -m "$1" | awk '$1 == "path" { print $2 }')"
	local v="$(go version -m "$1" | awk '$1 == "mod" { print $3 }')"
	if [[ $flagu = 1 ]] || [[ $v = '(devel)' ]]
	then
		v=latest
	fi
	local rver="$(go version | cut -d ' ' -f 3)"
	if ! [[ $lver = $rver ]]
	then
		echo "go install $p@$v # $lver -> $rver"
	fi
}

if (($# > 0))
then
	for i in "$@"
	do
		needupdate "$i"
	done
else
	dir="$(go env GOBIN)"
	if [[ -z $dir ]]
	then
		dir="$(go env GOPATH)/bin"
	fi
	if ! [[ -e "$dir" ]]
	then
		exit 0 # do not need more checks
	fi
	for i in "$dir"/*
	do
		needupdate "$i"
	done
fi
